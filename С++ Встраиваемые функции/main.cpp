//
//  main.cpp
//  С++ Встраиваемые функции
//
//  Created by Павел on 26.08.2022.
//

#include <iostream>
using namespace std;

//Встраиваемые  функции
//Сумма чисел А и В
inline int sum(int A, int B){
    return A+B;
}
//Сумма всех чисел от А до В
inline int sum_A_to_B(int A,int B){
    int res = 0;
    for(int i = A; i<=B; i++)
        res+= i;
    return res;
}

//Перегруженные функции
//Максимум из 2 -элементов
int max_el (int A, int B){//для работы  с целыми данными
    cout<<"Получены два целых числа\n";
    return A>B ? A : B;//тернарный оператор
}
//Максимум 2-х вещественных чисел
double max_el (double A, double B){ //для работы  с вещественными данными
    cout<<"Получены два вещественных числа\n";
    return A>B ? A : B;
}
//Максимум 3-х "коротких" чисел
short max_el (short A, short B, short C ){
    cout<<"Получены 3 коротких числа\n";
    return A>(B>C ? B:C) ? A:(B>C ? B:C);
}
//Максимум 2-х странных целых чисел
void max_el (int A, int B, bool F ){
    cout<<"Получены 2 странных целых числа\n";
    cout<< (A>B ? A:B)<<endl;
}

//Шаблонные функции
//Функция поиска модуля числа
template <typename T>
T absolute (T num) {
    return num < 0 ? -num : num;
}


int main(int argc, const char * argv[]) {
    setlocale(LC_ALL, "Rus");
    int n,m;
    
   //Встраиваемые  функции
    //SUM
    /*
    cout<<"Введите 2 числа: ";
    cin>>n>>m;
    cout<< n <<"+"<<m<<"="<<sum(n,m)<<endl;
    int res = sum(10,5);
    cout<<"10+5="<<res<<endl;
    //Встраиваемая ф-ция заменяет место своего вызова в коде своим телом
    */
    
    //SUM A to B
    /*
    cout<<"Введите 2 числа: ";
    cin>>n>>m;
    cout<<"Сумма чисел от "<<n<<"до"<<m<<" = "<<
    sum_A_to_B(n,m)<<endl;
    //Если ф-цию невозможно встрить, то она становится обычной ф-цией
    //Ф-цию невозможно встрить, если еетело физически не может существовать в том месте кода . где она вызывается
    
     */
    
    //Перегруженные функции
    //MAX_EL
    //Максимум из 2 -элементов
   /*
    cout<<max_el(10,7)<<endl;//10
    cout<<max_el(20,50)<<endl;//50
    cout<<max_el(0.3,0.8)<<endl;//0.8
    //Перегруженная функция обладает несколькими экземплярами, кот. отличаеются между собой  типами и/или количеством  принимаемых значений. Также экземпляры могут отличаться типами возвращаемых значений и телами.
    short s1 = 15,s2 = 20, s3 = 10;
    cout<<max_el(s1,s2,s3)<<endl;//20
    max_el(2,4,true);
    */
    
    //Шаблонная функция (шаблон функции)- функция , которая может работать с любыми типами данных. Генерирует экземпляры функций  в зависимости от типов переданных данных.
    //ABSOLUTE
    cout<<absolute(7)<<endl;//7
    cout<<absolute(-11)<<endl;//11
    cout<<absolute(0.16)<<endl;//0.16
    cout<<absolute(-1.5)<<endl;//1.5
    //Идентификатор Т является параметром шаблона . Именно он определяет тип параметра, передаваемого в момент вызова функции
    
    
    return 0;
}
